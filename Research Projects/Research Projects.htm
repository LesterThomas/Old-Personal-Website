
<!DOCTYPE html>
<!--[if lt IE 7]>      <html class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]>         <html class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]>         <html class="no-js lt-ie9"> <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js"> <!--<![endif]-->
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, minimum-scale=1.0, maximum-scale=1.0" /> 
    <title>Lester Thomas Research Projects</title>

    <link rel="stylesheet" href="css/style.css">


</head>
<body>
	<link rel="stylesheet" href="css/themes/default/jquery.mobile-1.4.4.min.css">

	<script src="js/jquery.js"></script>
	<script src="js/jquery.mobile-1.4.4.min.js"></script>
  <script src="js/json2html.js"></script>
  <script src="js/jquery.json2html.js"></script>

	<div id="banner"><img src="images/Research-Projects.gif"></div>

	<div id="main">
	  <div id="main-content">
	  <p><a href="../index.htm" data-ajax="false">Home </a> / Research Projects</p>
    <p/> 
    <div id="projects"> <!--The actual projects are loaded via JSON2HTML below--></div>  
	 </div> 

  <div id="widget-container">
    <div class="widget-content">
       <div class="widget-title">
             Responsive web designs
       </div>
       <div class="widget-text">
             Responsive web design (RWD) is a web design approach aimed at crafting sites to provide an optimal viewing experience: Easy reading and navigation with a minimum of resizing, panning, and scrolling across a wide range of devices. 
             A site designed with RWD adapts the layout to the viewing environment by using fluid, proportion-based grids, flexible images, and CSS3 media queries.
       </div>
    </div> 
    <div class="widget-content">
       <div class="widget-title">
             CSS float property 
       </div>
       <div class="widget-text">
             Float is a CSS positioning property. Any block-level element can be assigned a float property to make it float to the left or right. Subsequent elements will flow around it. In web design, page elements with the CSS float property applied to them are just like the images in a Newspaper where the text flows around them. Floated elements remain a part of the flow of the web page. 
       </div>
    </div>  
    <div class="widget-content">
       <div class="widget-title">
             Media queries
       </div>
       <div class="widget-text">
              CSS Media queries allow you to target CSS rules based on - for instance - screen size, device-orientation or display-density. This means you can use CSS Media Queries to tweak a CSS for an iPad, printer or create a responsive site. This page uses Media queries based on screen size. 
       </div>
    </div>  
  </div>
</div>

<script>
  $(document).on("pageinit", function() {
  //populate the projects list with JSON2HTML template
  var transform ={"tag":"div","data-role":"collapsible","data-mini":"true","class":"projectDivs","children":[
    {"tag":"h4","html":"${Title}"},
    {"tag":"p","html":"${Description}"}
  ]}

  /*var json= [{
          "Title": "Node-Red on Raspberry Pi",
          "projectBrief": "Node-Red",
          "Description": "Link to <a href=\"http://lesterthomas.ddns.net:1880\" data-ajax=\"false\" target=\"new\">Node-Red on Raspberry Pi </a></br>The link above takes you to the Development Environment for Node-Red running on my Raspberry Pi (configured as a <a href=\"http://thethingbox.io/\" data-ajax=\"false\">TheThingBox</a>.)"
        },{
          "Title": "Node.js on Heroku",
          "projectBrief": "Node-Red2",
          "Description": "Node-Red Description2"
        }];*/

    $.getJSON("projects.json", function(json) {
        $('#projects').json2html(json,transform);
        $(".projectDivs").trigger('create');

      });

});




</script>
</body>
</html>
